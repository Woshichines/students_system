#ifndef HEAD
#define HEAD

#include <iostream>
#include <string>
#include <cmath>
#include <list>
#include <array>
#include <vector>
#include <algorithm> 
#include <fstream>   
#include <map>       
#include <set>       
#include <queue>     
#include <stack>     
#include <tuple>     
#include <utility>   
#include <filesystem>
#include <ctime>
#include <memory>

using namespace std;

class Teachers;
class Students;
class Schools; 
class Classrooms;

class Teachers : private enable_shared_from_this<Teachers>
{   
    private:
    string m_老师姓名;
    string m_身份证号; 
    string m_家庭住址;
    vector<shared_ptr<Classrooms>> m_所在班级;

    private:
    shared_ptr<Teachers> self = shared_from_this();


    public:
    Teachers(string 老师姓名, 
            vector<shared_ptr<Classrooms>> 所在班级 = {}, 
            string 身份证号 = "", 
            string 家庭住址 = "" 
           )
    :m_老师姓名(老师姓名) ,
    m_身份证号(身份证号),
    m_家庭住址(家庭住址),
    m_所在班级(所在班级)
    {}

    ~Teachers()
    {}

    int 加分(shared_ptr<Students> 被操作学生, int 分数);
    int 减分(shared_ptr<Students> 被操作学生, int 分数);
    int 添加班级(shared_ptr<Classrooms> 班级);
};

class Students : private enable_shared_from_this<Students>
{   
    private:
        shared_ptr<Schools> m_校区;      
        shared_ptr<Classrooms> m_班级;
        string m_姓名;      
        int m_学号;        
        string m_身份证号; 
        string m_家庭住址;
        shared_ptr<Students> self = shared_from_this();

    private:
        int m_分数[2] = {0, 0};

    public:
        Students(string 姓名, 
         shared_ptr<Schools> 校区 = NULL, 
         shared_ptr<Classrooms> 班级 = NULL,
         int 学号 = 0, 
         string 身份证号 = "", 
         string 家庭住址 = "")
            : m_姓名(姓名), 
            m_学号(学号), 
            m_身份证号(身份证号), 
            m_家庭住址(家庭住址)
            {
               m_校区 = 校区;
               m_班级 = 班级;

               m_班级 -> 增加学生(self);
            }

        int 加分(int 分数);
        int 减分(int 分数);
        int* 输出分数();
        shared_ptr<Classrooms> 输出班级();
        int 更改班级(shared_ptr<Classrooms> 班级);
};

class Schools;

class Classrooms : enable_shared_from_this<Classrooms>
{
    public:
        static int m_总学生数量;

    private:
    shared_ptr<Schools> m_校区;
    int m_级数;
    int m_班数;
    string m_班名;
    int m_学生数;
    vector<shared_ptr<Students>> m_学生;
    vector<shared_ptr<Teachers>> m_教师;

    private:
    shared_ptr<Classrooms> self = shared_from_this();

    public:
        Classrooms(
                    shared_ptr<Schools> 校区 = NULL,  
                    int 级数 = 求级数(), 
                    int 班数 = 0, 
                    string 班名 = 求级数()+"届新建班级",
                    vector<shared_ptr<Students>> 学生 = {},
                    vector<shared_ptr<Teachers>> 教师 = {})
                    :   m_校区(校区),
                        m_级数(级数),
                        m_班数(班数),
                        m_班名(班名),
                        m_学生数(学生.size()),
                        m_学生(学生),
                        m_教师(教师)
                        {}


        int 打印届数(); 
        int 打印其他(); 
        int 增加学生(shared_ptr<Students> 学生);   
        int 删除学生(shared_ptr<Students> 学生);    
        int 增加教师(shared_ptr<Teachers> 老师);   
        int 删除教师(shared_ptr<Teachers> 老师);
        auto 输出学生列表();

};


int 求级数()
{
    long long mytime = time(NULL);
    long long y = 31536000;
    long long year = mytime / y;
    int int_year = static_cast<int>(year);
    return int_year + 1970;
}



#endif