#ifndef STUDENTS
#define STUDENTS

#include "./head"
#include "Classrooms"
#include "Schools"
#include "Teachers"

using namespace std;

class Students : private enable_shared_from_this<Students>
{   
    private:
        shared_ptr<Schools> m_校区;      
        shared_ptr<Classrooms> m_班级;
        string m_姓名;      
        int m_学号;        
        string m_身份证号; 
        string m_家庭住址;
        shared_ptr<Students> self = shared_from_this();

    private:
        int m_分数[2] = {0, 0};

    public:
        Students(string 姓名, 
         shared_ptr<Schools> 校区 = NULL, 
         shared_ptr<Classrooms> 班级 = NULL,
         int 学号 = 0, 
         string 身份证号 = "", 
         string 家庭住址 = "")
            : m_姓名(姓名), 
            m_学号(学号), 
            m_身份证号(身份证号), 
            m_家庭住址(家庭住址)
            {
               m_校区 = 校区;
               m_班级 = 班级;

               班级 -> 增加学生a(self);
            }

        int 加分(int 分数);
        int 减分(int 分数);
        int* 输出分数();
        shared_ptr<Classrooms> 输出班级();
        int 更改班级a(shared_ptr<Classrooms> 班级);
        int 更改班级b(shared_ptr<Classrooms> 班级);
        int 更改班级c(shared_ptr<Classrooms> 班级);
};



int Students::加分(int 分数 = 1)
{
    m_分数[0] += 分数;
    return 0;
}

int Students::减分(int 分数 = 1)
{
    m_分数[1] -= 分数;
    return 0;
}

int* Students::输出分数()
{
    return m_分数;
}

shared_ptr<Classrooms> Students::输出班级()
{
    return m_班级;
}

int Students::更改班级c(shared_ptr<Classrooms> 班级)
{
    m_班级 -> 删除学生(self);
    m_班级 = 班级;
    auto a = m_班级 -> 输出学生列表();

    if (! find_b(a.begin(), a.end(), self))
    {
        m_班级 -> 增加学生c(self);
    }

    return 0;
}

#endif